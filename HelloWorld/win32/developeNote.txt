2014-04-04
XYrect만 생각하고 있었는데
XZ,YZ의 세종류가 있었다. 지금 방식으로 만들려면
Unit의 Child class를 세개로 분할해서 만들던가 rect에 옵션값을 주던가 해야한다.

따라서 다음과 같은 방식을 생각했다.
My3DCube와 My3DRect를 합치는 것이다.
이 둘의 차이점은 한 차원의 길이 값이 0과 0이 아닌 차이밖에 없다
따라서 이 차이점을 기준으로 그리는 방식을 조절하면 될것이다.

기본적인 충돌모형이기 때문에 이런식으로 만든다면 충돌Check시
InterSeckCube함수만 만든다면 충돌함수에 필요한 기본적인함수는 
다 만들어 진 셈일 것이다.

따라서 지금부터 만들것은 My3DCube2 인데 이름을 어떻게 지을지 모르겠다.
일단 My3DCube과 My3DRect를 프로젝트에서 제외시킨후 백업하고 My3DCube를 다시만드는
식으로 만들 것이다.... 아니다 My3DCube만 살짝 바꾸면 될 것 같다. 이렇게 하자.

->후기
My3DCube를 고쳐서 새로만든후 My3DRect를 지웠다.
Cube에서 동작하는 InterSectCube(AABB)와 충돌검사 tag 등을 추가했다.
이제 백그라운드스프라이트는 정해진 타겟에 대하여 특정 tag와의 AABB충돌 검사를 
할수 있다. 
 네트워크 오목 MFC를 마지막으로 MFC가 끝났다. 이제 2D프로젝트에 집중할 수있을 것
같다.

2014-04-09
게임 로직상 중요한 것은 데미지전달 방식과 컨트롤방식이 있다.
-데미지 전달은 다음과 같은 식으로 처리되어야 한다.
1.특정 unit가 공격을 실행한다.
2.공격바운트 Cube가 생성되고 intersectCube로 충돌을 검사한다.
3.충돌당한 Unit들은 demage객체를 실행한다.

여기서 생길수 있는 issue는 다음과 같다.
1. 한개의 데미지 박스에는 한번의 피격이 실행되어야 한다.
2. bg에 소속된 list가 필요하다.
3. 데미지 박스가 유닛을 제어할 수 있어야 한다.(데미지, 상태이상, 힘);

-중력방식(다이나믹 무빙 응용)
1. 힘을 더한다.
2. forcetick에서 힘/16 *dt? 만큼 이동한다.
	여기서 raycast가 필요하다.(결국 필요하구먼...)
	충돌시 바닥과 벽면에 대하여 충돌을 실행한다.(힘의 방향을 바꾼다던지...)

3. 시간에 정비례하여 힘을 줄인다.
4+. 객체의 -1z단위 아래로 검사한다.
5. 뭔가 있으면 그대로 뭔가 없다면 -z방향으로 gravity만큼 힘을 더한다.

*** 후회되는것
cocos2d가 Object-C에서 만들어진걸 cpp로 포팅해서 그런지 
생성자나 파괴자를 쓰지 않는다. 이런 스타일과 cpp스타일을 
섞어서 쓰는바람에 init과 생성자가 좀 그렇게 섞였다.

14-04-10
